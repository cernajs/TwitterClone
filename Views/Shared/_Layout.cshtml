<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - tt</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/tt.styles.css" asp-append-version="true" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.9/signalr.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">tt</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            @* <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a> *@
                            <a asp-controller="Chat" asp-action="Index">Go to Chat</a>
                        </li>
                    </ul>
                
                    <div class="d-flex align-items-center justify-content-center">
                        <form asp-action="Search" asp-controller="Home" method="get">
                            <input type="text" name="searchQuery" placeholder="Search tweets">
                            <button type="submit">Search</button>
                        </form>
                    </div>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @* <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - tt - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer> *@
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <script>
    
        function addTweetToFeed(id, username, content, createdAt, likesCount, userId, isLikedByCurrentUser) {
            const feed = $("#tweetFeed");

            const tweetHtml = `
                <div class="container">
                    <li>
                        <a href="/User/Index/${userId}">${username}:</a>
                        ${username}: ${content} - ${createdAt} <br>

                        @* <a href="/Tweet/ShowLikes/${id}"># of likes: ${likesCount}</a> *@
                        <span class="likes-count">
                            <a href="/Tweet/ShowLikes/${id}">
                                # of likes : <span class="actual-count">${likesCount}</span>
                            </a>
                        </span>
                        @* ${likesSection} *@
                        <form method="post" action="/Tweet/Like" class="like-form">
                            <input type="hidden" name="tweetId" value="${id}" />
                            <button type="submit">Like</button>
                        </form>
                        <h1>Reply</h1>
                        <form method="post" action="/Tweet/Reply">
                            <input type="hidden" name="ParentTweetId" value="${id}" />
                            <textarea name="Content"></textarea>
                            <button type="submit">Reply</button>
                        </form>
                    </li>
                </div>
            `;

            feed.prepend(tweetHtml);
        }

        function addChatMessageToFeed(username, message) {
            const feed = $("#chatFeed");

            const chatMessageHtml = `
                <div class="container">
                    <li>
                        @* <a href="/User/Index/${userId}"></a> *@
                        ${username}: ${message}
                    </li>
                </div>
            `;

            feed.prepend(chatMessageHtml);
        }


        $(document).ready(function () {

            $('#tweetFeed').on('submit', '.like-form', function(e) {
                e.preventDefault();
                handleLikeUnlike($(this), true);
            });

            $('#tweetFeed').on('submit', '.unlike-form', function(e) {
                e.preventDefault();
                handleLikeUnlike($(this), false);
            });


            function handleLikeUnlike($form, isLike) {
                const formData = $form.serialize(); 
                const url = $form.attr('action');

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            if (isLike) {
                                // Swap the "Like" button with "Unlike"
                                $form.removeClass('like-form').addClass('unlike-form');
                                $form.find('button').text('Unlike');
                                $form.attr('action', '/Tweet/Unlike');
                            } else {
                                // Swap the "Unlike" button with "Like"
                                $form.removeClass('unlike-form').addClass('like-form');
                                $form.find('button').text('Like');
                                $form.attr('action', '/Tweet/Like');
                            }

                            const countElem = $form.closest('li').find('.likes-count .actual-count');
                            const currentCount = parseInt(countElem.text(), 10);  // Convert the text to an integer
                            countElem.text(isLike ? currentCount + 1 : currentCount - 1);
                        } else {
                            alert('Action failed. Try again later.');
                        }
                    },
                    error: function() {
                        alert('Request failed.');
                    }
                });
                return false;
            }


            $("#tweetCreationForm").submit(function (event) {
                event.preventDefault(); // Prevent form from submitting

                const formData = $(this).serialize(); // Get form data

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            // tweet is added to the feed through SignalR.

                        } else {
                            alert('Failed to create tweet!');
                        }
                    },
                    error: function () {
                        alert('Failed to submit tweet!');
                    }
                });
            });


            //SIGNALR
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("ReceiveNotification", (message) => {
            alert(message);
        });


        connection.on("ReceiveTweet", function (id, username, content, createdAt, likesCount, userId, isLikedByCurrentUser) {
            addTweetToFeed(id, username, content, createdAt, likesCount, userId, isLikedByCurrentUser);
        });

        connection.start().catch(err => console.error(err.toString()));

        connection.on("ReceiveChatMessage", function (username, message) {
            addChatMessageToFeed(username, message);
        });



        @* CHAT *@
        $("#sendChatButton").click(function() {
            sendMessage();
        });

        connection.on("ReceiveMessage", function (message, username) {
            @* alert(message + " " + username);
            var messageClass = username === '@User.Identity.Name' ? 'myMessage' : 'otherMessage'; *@
            var messageElement = `<div class="otherMessage">${username}: ${message}</div>`;
            document.getElementById("chatArea").innerHTML += messageElement;
        });


        function sendMessage() {
            var message = document.getElementById("messageInput").value;
            var messageElement = `<div class="myMessage">@User.Identity.Name: ${message}</div>`;
            document.getElementById("chatArea").innerHTML += messageElement;
            connection.invoke("SendMessage", otherUserId, message).catch(function (err) {
                return console.error(err.toString());
            });
        }

        });

    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
