@model ApplicationUser
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject UserManager<ApplicationUser> UserManager

<link rel="stylesheet" href="~/css/modal.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/tweetView.css" asp-append-version="true" />


@{
    var currentUserId = UserManager.GetUserId(User);
    var tweets = Model.Tweets.OrderByDescending(t => t.CreatedAt).Take(10);
    var retweets = Model.Retweets.Select(t => t.Tweet).Take(10);
    retweets = retweets.Select(r => new RetweetedTweet(r)).ToList();
    var combined = tweets.Concat(retweets).OrderByDescending(t => t.CreatedAt).Take(20);
}

<div class="profile-container">
    <div class="header-section">
        <div class="profile-pic">
            <img src="@Model.ProfilePicture" alt="Profile Picture" />
        </div>
        <div class="profile-info">
            <h1>@Model.UserName</h1>
        </div>
        <div class="profile-actions">
            @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.UserName)
            {
                <button id="editProfileButton" class="action-btn">Edit Profile</button>
            }
            @if (User.Identity.IsAuthenticated && User.Identity.Name != Model.UserName)
            {
              @if(!Model.Followers.Any(f => f.FollowerId == currentUserId))
              {
                <form method="post" asp-controller="User" asp-action="Follow">
                    <input type="hidden" name="userIdToFollow" value="@Model.Id" />
                    <button type="submit">Follow</button>
                </form>
              }
              else
              {
                <form method="post" asp-controller="User" asp-action="Unfollow">
                    <input type="hidden" name="userIdToUnfollow" value="@Model.Id" />
                    <button type="submit">Unfollow</button>
                </form>
              }
              <a asp-controller="Chat" asp-action="ChatWithSpecificUser" asp-route-id="@Model.Id" class="action-btn">Chat</a>
              @*  [HttpGet("api/messages/{id}")] *@
              @* <a asp-controller="api" asp-action="messages" asp-route-id="@Model.Id" class="action-btn">Chat</a> *@
            }
        </div>
    </div>

    <div class="stats-section">
        <a asp-controller="User" asp-action="ShowUsers" asp-route-id="@Model.Id" asp-route-type="followers">Followers: @Model.Followers.Count</a>
        <a asp-controller="User" asp-action="ShowUsers" asp-route-id="@Model.Id" asp-route-type="followings">Following: @Model.Following.Count</a>
    </div>

    <div class="tweets-section">
        <h1>Recent Tweets</h1>
        <ul id="tweetFeed">
            @foreach (var tweet in combined)
            {
                <partial name="_TweetPartial" model="@tweet" />
            }
        </ul>
    </div>
</div>

<div id="editProfileModal" class="modal">
  <div class="modal-content">
    <span class="close-button" id="closeModal">&times;</span>
    <h2>Edit Profile</h2>
    <form id="editProfileForm" class="modal-form">
      <input asp-for="@Model.Id" type="hidden" id="userId" name="userId" value="@Model.Id" />
      <div class="form-row">
        <label for="username">Username</label>
        <input asp-for="@Model.UserName" type="text" id="username" name="username">
      </div>
      <div class="form-row">
        <label for="email">Email</label>
        <input asp-for="@Model.Email" type="email" id="email" name="email">
      </div>

      <div class="form-row">
        <input type="submit" value="Save" class="save-button">
      </div>
    </form>
  </div>
</div>
